

CREATE COMPUTE MODULE ErrorHandling_SF_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN		
		 
		 CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		DECLARE ExceptionList REFERENCE To InputExceptionList;
		DECLARE messageNumber CHARACTER;
		DECLARE messageText CHARACTER;
		DECLARE messageType CHARACTER;
		DECLARE messageDetailed CHARACTER '';
		DECLARE FLAG BOOLEAN FALSE;
		-- Create a reference to the first child of the exception list
   	    DECLARE ptrException reference to ExceptionList.*[1];
   	    -- keep looping while the moves to the child of exception list work

		X:WHILE lastmove(ptrException) DO
			-- store the current values for the error number and text
			IF ptrException.Number is not null THEN
        		SET messageNumber = ptrException.Number;
        		SET messageText = ptrException.Text;
        		SET messageType = FIELDNAME(ptrException);
			ELSEIF ptrException.Text IS NOT NULL THEN
				IF FIELDNAME(ptrException) = 'Insert' THEN
					SET FLAG = TRUE;
					SET messageDetailed = ptrException.Text||' '||messageDetailed;
				ELSE 
					SET FLAG=FALSE;
					LEAVE X;
				END IF;
  			END IF;
  			-- now move to the last child which should be the next exceptionlist
  			IF NOT(FLAG) THEN
				move ptrException lastchild;
  			ELSE
  				move ptrException PREVIOUSSIBLING;
  			END IF;
		END WHILE; 
		--Merging the details to a message
		--Building the Exception Message 
		SET OutputRoot.XMLNSC.ErrorMsg.MsgID = MessageFlowLabel || '_' ||CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'yyyyMMddHHmmss');
		SET OutputRoot.XMLNSC.ErrorMsg.TimeStamp = CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'yyyy-MMM-dd HH:mm:ss');
		IF Environment.Variables.SourceSystem IS NOT NULL THEN
			SET OutputRoot.XMLNSC.ErrorMsg.ApplicationName = Environment.Variables.SourceSystem;
		ELSE
			SET OutputRoot.XMLNSC.ErrorMsg.ApplicationName = ApplicationLabel;
		END IF;
		SET OutputRoot.XMLNSC.ErrorMsg.ErrorDetails.ComponentName = BrokerName;
		SET OutputRoot.XMLNSC.ErrorMsg.ErrorDetails.ComponentID = MessageFlowLabel;
		SET OutputRoot.XMLNSC.ErrorMsg.ErrorDetails.ErrNo = messageNumber;
		SET OutputRoot.XMLNSC.ErrorMsg.ErrorDetails.ErrType = messageType;
		SET OutputRoot.XMLNSC.ErrorMsg.ErrorDetails.ErrDesc = messageText;
		SET OutputRoot.XMLNSC.ErrorMsg.ErrorDetails.ErrSpecification = messageDetailed;
		
		SET OutputLocalEnvironment.Destination.MQDestinationList.DestinationData[1].queueName = ApplicationLabel||'.LOG.ERROR';
	END;
END MODULE;
